Este ficheiro é para guardar os tempos percorridos e analizar o sepdup das alterações para depois colocar no relatório

Sequencial: 

    imagem: 3000x2500 px
    iterações: 10
    tempo de execução ~= 9600 ms

    imagem: 3000x2500 px
    iterações: 15
    tempo de execução ~= 14500 ms

    imagem: 3000x2500 px
    iterações: 20
    tempo de execução ~= 19000 ms


Parallelizado:

    inclusão das diretivas "omp parallel for" iniciais e simplificação do ciclo de grayscaling:

        imagem: 3000x2500 px

        num_threads = 8
        iterações: 10
        tempo de execução ~= 1800 ms

        speedup = 5.33

    separação das funcionalidades de histogram_equalization

    Análise do profiller:

        build_histogram: 33.40%
        correct_color: 19.26%
        apply_histogram_equalization: 10.27%


        build_histogram -> reduzir competição com histogram locais, cada thread escreve no seu histogram e no fim junta-se tudo

    Atualização build_histogram:

        imagem: 3000x2500 px
        iterações: 15
        tempo de execução ~= 2000 ms

        speedup = 14500/2000 = 7.25

    Análise do profiller:

        correct_color: 27.56%
        apply_histogram_equalization: 14.34%
        convert_to_float: 11.76%

        não sei como otimizar o correct_color e apply_histogram_equalization

    Reduzir número de ciclos:

        convert_to_uchar, convert_to_grayscale, local_histogram em 1 ciclo
        calcular 3 uchar_image em cada passo para o ciclo funcionar
        é preciso juntar as funcionalidades

        apply_histogram_equalization e convert_to_float também podem ser juntadas

        imagem: 3000x2500 px
        num_threads = 8
        iterações: 20
        tempo de execução ~= 1800 ms (1562)

        speedup = 19000/1800 = 10.5

        talvez seja preciso ajustar o timer para registar apenas a parte paralelizável, falar com o stor